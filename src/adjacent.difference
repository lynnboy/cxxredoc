[section#adjacent.difference
    [:en] Adjacent difference
]

[%@library adjacent_difference]
[codeblock:declaration]
template <class InputIterator, class OutputIterator>
  OutputIterator adjacent_difference(
    InputIterator first, InputIterator last,
    OutputIterator result);
template <class InputIterator, class OutputIterator, class BinaryOperation>
  OutputIterator adjacent_difference(
    InputIterator first, InputIterator last,
    OutputIterator result,
    BinaryOperation binary_op);
[codeblock:end]

[enter:description]
[para:effects]
[:en] For a non-empty range, the function creates an accumulator [`acc] whose
type is [`InputIterator][=']s value type, initializes it with [`*first], and
assigns the result to [`*result].

[:en] For every iterator [`i] in [=range[first + 1,last)] in order, creates an
object [`val] whose type is [`InputIterator][=']s value type, initializes it
with [`*i], computes [`val - acc] or [`binary_op(val, acc)], assigns the result
to [`*(result + (i - first))], and move assigns from [`val] to [`acc].

[para:requires]
[:en] [`InputIterator][=']s value type shall be [`MoveAssignable] (Table
[#moveassignable]) and shall be constructible from the type of [`*first].

[:en] [`acc] shall be writable to the [`result] output iterator.

[:en] The result of the expression [`val - acc] or [`binary_op(val, acc)] shall
be writable to the [`result] output iterator.

[:en] In the ranges [=crange[first,last)] and
[=crange[result,result + (last - first))], [`binary_op] shall neither modify
elements nor invalidate iterators or subranges.

[footnote]
[:en] The use of fully closed ranges is intentional.
[footnote:end]

[para:notes]
[:en] [`result] may be equal to [`first].

[para:returns]
[:en] [`result + (last - first)].

[para:complexity]
[:en] Exactly [`(last - first) - 1] applications of the binary operation.
[exit:description]
