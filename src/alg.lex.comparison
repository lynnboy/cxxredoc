[section#alg.lex.comparison
    [:en] Lexicographical comparison
]

[%@library lexicographical_compare]
[codeblock:declaration]
template<class InputIterator1, class InputIterator2>
  bool
    lexicographical_compare(InputIterator1 first1, InputIterator1 last1,
                            InputIterator2 first2, InputIterator2 last2);

template<class InputIterator1, class InputIterator2, class Compare>
  bool
    lexicographical_compare(InputIterator1 first1, InputIterator1 last1,
                            InputIterator2 first2, InputIterator2 last2,
                            Compare comp);
[codeblock:end]

[enter:description]
[para:returns]
[:en] [`true] if the sequence of elements defined by the range
[=range[first1,last1)] is lexicographically less than the sequence of elements
defined by the range [=range[first2,last2)] and [`false] otherwise.

[para:complexity]
[:en] At most [`2*min((last1 - first1), (last2 - first2))] applications of the
corresponding comparison.

[para:notes]
[:en] If two sequences have the same number of elements and their corresponding
elements are equivalent, then neither sequence is lexicographically less than
the other.

[:en] If one sequence is a prefix of the other, then the shorter sequence is
lexicographically less than the longer sequence.

[:en] Otherwise, the lexicographical comparison of the sequences yields the same
result as the comparison of the first corresponding pair of elements that are
not equivalent.

[codeblock:notation]
for ( ; first1 != last1 && first2 != last2 ; ++first1, ++first2) {
  if (*first1 < *first2) return true;
  if (*first2 < *first1) return false;
}
return first1 == last1 && first2 != last2;
[codeblock:end]

[para:remarks]
[:en] An empty sequence is lexicographically less than any non-empty sequence,
but not less than any empty sequence.
[exit:description]
