[section#alg.reverse
    [:en] Reverse
]

[%@library reverse]
[codeblock:declaration]
template<class BidirectionalIterator>
  void reverse(BidirectionalIterator first, BidirectionalIterator last);
[codeblock:end]

[enter:description]
[para:effects]
[:en] For each non-negative integer [`i < (last - first)/2], applies
[`iter_swap] to all pairs of iterators [`first + i, (last - i) - 1].

[para:requires]
[:en] [`*first] shall be swappable ([#swappable.requirements]).

[para:complexity]
[:en] Exactly [`(last - first)/2] swaps.
[exit:description]

[%@library reverse_copy]
[codeblock:declaration]
template<class BidirectionalIterator, class OutputIterator>
  OutputIterator
    reverse_copy(BidirectionalIterator first,
                 BidirectionalIterator last, OutputIterator result);
[codeblock:end]

[enter:description]
[para:effects]
[:en] Copies the range [=range[first,last)] to the range
[=range[result,result+(last-first))] such that for every non-negative integer
[`i < (last - first)] the following assignment takes place:
[`*(result + (last - first) - 1 - i) = *(first + i)].

[para:requires]
[:en] The ranges [=range[first,last)] and [=range[result,result+(last-first))]
shall not overlap.

[para:returns]
[:en] [`result + (last - first)].

[para:complexity]
[:en] Exactly [`last - first] assignments.
[exit:description]
