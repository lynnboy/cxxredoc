[section#bad.exception
    [:en] Class [`bad_exception]
    [:zh_CN] 类 [`bad_exception]
]

[%@library bad_exception]
[codeblock:synopsis]
namespace std {
  class bad_exception : public exception {
  public:
    bad_exception() noexcept;
    bad_exception(const bad_exception&) noexcept;
    bad_exception& operator=(const bad_exception&) noexcept;
    virtual const char* what() const noexcept;
  };
}
[codeblock:end]

[para]
[:en]
The class [`bad_exception] defines the type of objects thrown as described in
([#except.unexpected]).
[:zh_CN]
[`bad_exception] 类定义了根据 [#except.unexpected] 中的描述所抛出的对象的类型。

[%@library bad_exception[!bad_exception]]
[codeblock:declaration]
bad_exception() noexcept;
[codeblock:end]

[enter:description]
[para:effects]
[:en]
Constructs an object of class [`bad_exception].
[:zh_CN]
构造一个类 [`bad_exception] 的对象。

[para:notes]
[:en]
The result of calling [`what()] on the newly constructed object is
[%implementation-defined] implementation-defined.
[:zh_CN]
在新构造的对象上调用 [`what()] 的结果是[%由实现定义的]由实现定义的。
[exit:description]

[%@library bad_exception[!bad_exception]]
[%@library operator=[!bad_exception]]
[codeblock:declaration]
bad_exception(const bad_exception&) noexcept;
bad_exception& operator=(const bad_exception&) noexcept;
[codeblock:end]

[enter:description]
[para:effects]
[:en]
Copies an object of class [`bad_exception].
[:zh_CN]
复制一个类 [`bad_exception] 的对象。
[exit:description]

[%@library what[!bad_exception]]
[codeblock:declaration]
virtual const char* what() const noexcept;
[codeblock:end]

[enter:description]
[para:returns]
[:en]
[%@library bad_exception::what[!implementation-defined]]
An [%@impldef return value of [`bad_exception::what]] implementation-defined
[em@sc ntbs].
[:zh_CN]
[%@library bad_exception::what[!由实现定义的]]
一个[%@impldef [`bad_exception::what]的返回值]由实现定义的 [em@sc ntbs]。

[para:notes]
[:en]
The message may be a null-terminated multibyte string ([#multibyte.strings]),
suitable for conversion and display as a [`wstring] ([#string.classes],
[#locale.codecvt]).
[:zh_CN]
该消息可能是个空终结多字节字符串（[#multibyte.strings]），且适于转换并显示为一个
[`wstring]（[#string.classes]，[#locale.codecvt]）。
[exit:description]
