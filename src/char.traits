[section#char.traits
    [:en] Character traits
]

[para]
[:en]
This subclause defines requirements on classes representing [+character traits],
and defines a class template [`char_traits<charT>], along with four
specializations, [`char_traits<char>], [`char_traits<char16_t>],
[`char_traits<char32_t>], and [`char_traits<wchar_t>], that satisfy those
requirements.

[para]
[:en]
Most classes specified in Clauses [#string.classes] and [#input.output] need a
set of related types and functions to complete the definition of their
semantics.

[:en]
These types and functions are provided as a set of member typedefs and functions
in the template parameter ["traits] used by each such template.

[:en]
This subclause defines the semantics of these members.

[para]
[:en]
To specialize those templates to generate a string or iostream class to handle a
particular character container type [`CharT], that and its related character
traits class [`Traits] are passed as a pair of parameters to the string or
iostream template as parameters [`charT] and [`traits].

[:en]
[`Traits::char_type] shall be the same as [`CharT].

[para]
[:en]
This subclause specifies a struct template, [`char_traits<charT>], and four
explicit specializations of it, [`char_traits<char>], [`char_traits<char16_t>],
[`char_traits<char32_t>], and [`char_traits<wchar_t>], all of which appear in
the header [`<string>] and satisfy the requirements below.

[include char.traits.require]

[include char.traits.typedef]

[include char.traits.specializations]
