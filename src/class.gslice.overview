[section#class.gslice.overview
    [:en] The [`gslice] class overview
]

[%@library gslice]
[codeblock:synopsis]
namespace std {
  class gslice {
  public:
    gslice();
    gslice(size_t s, const valarray<size_t>& l, const valarray<size_t>& d);

    size_t           start() const;
    valarray<size_t> size() const;
    valarray<size_t> stride() const;
  };
}
[codeblock:end]

[para]
[:en] This class represents a generalized slice out of an array.

[:en] A [`gslice] is defined by a starting offset ([$s]), a set of lengths
([$l[_j]]), and a set of strides ([$d[_j]]).

[:en] The number of lengths shall equal the number of strides.

[para]
[:en] A [`gslice] represents a mapping from a set of indices ([$i[_j]]), equal
in number to the number of strides, to a single index [$k].

[:en] It is useful for building multidimensional array classes using the
[`valarray] template, which is one-dimensional.

[:en] The set of one-dimensional index values specified by a [`gslice] are

[math]
k = s + [=sum@j] i[_j]d[_j]
[math:end]

[:en@~] where the multidimensional indices [$i[_j]] range in value from
0 to [$l[_ij]] - 1.

[para]
[enter:example]
[:en] The [`gslice] specification

[codeblock:notation]
start  = 3
length = {2, 4, 3}
stride = {19, 4, 1}
[codeblock:end]

[:en@~] yields the sequence of one-dimensional indices

[math]
k = 3 + (0,1) [=times] 19 + (0, 1, 2, 3) [=times] 4 + (0, 1, 2) [=times] 1
[math:end]

[:en@~] which are ordered as shown in the following table:

[math@aligned]
(i[_0], i[_1], i[_2], k) =
[rows@aligned]
    (0,  0,  0,  3),
    (0,  0,  1,  4),
    (0,  0,  2,  5),
    (0,  1,  0,  7),
    (0,  1,  1,  8),
    (0,  1,  2,  9),
    (0,  2,  0, 11),
    (0,  2,  1, 12),
    (0,  2,  2, 13),
    (0,  3,  0, 15),
    (0,  3,  1, 16),
    (0,  3,  2, 17),
    (1,  0,  0, 22),
    (1,  0,  1, 23),
    [=ldots]
    (1,  3,  2, 36)
[rows:end]
[math:end]

[:en] That is, the highest-ordered index turns fastest.
[exit:example]

[para]
[:en] It is possible to have degenerate generalized slices in which an address
is repeated.

[para]
[enter:example]
[:en] If the stride parameters in the previous example are changed to {1, 1, 1},
the first few elements of the resulting sequence of indices will be

[math@aligned]
[rows@aligned]
    (0,  0,  0,  3),
    (0,  0,  1,  4),
    (0,  0,  2,  5),
    (0,  1,  0,  4),
    (0,  1,  1,  5),
    (0,  1,  2,  6),
    [=ldots]
[rows:end]
[math:end]
[exit:example]

[para]
[:en] If a degenerate slice is used as the argument to the non-[`const] version
of [`operator[`](const gslice&)], the resulting behavior is [%undefined]
undefined.
