[section#equal.range
    [:en] [`equal_range]
]

[%@library equal_range]
[codeblock:declaration]
template<class ForwardIterator, class T>
  pair<ForwardIterator, ForwardIterator>
    equal_range(ForwardIterator first,
                ForwardIterator last, const T& value);

template<class ForwardIterator, class T, class Compare>
  pair<ForwardIterator, ForwardIterator>
    equal_range(ForwardIterator first,
                ForwardIterator last, const T& value,
                Compare comp);
[codeblock:end]

[enter:description]
[para:requires]
[:en] The elements [`e] of [=range[first,last)] shall be partitioned with
respect to the expressions [`e < value] and [`!(value < e)] or [`comp(e, value)]
and [`!comp(value, e)].

[:en] Also, for all elements [`e] of [`[first, last)], [`e < value] shall imply
[`!(value < e)] or [`comp(e, value)] shall imply [`!comp(value, e)].

[para:returns]
[codeblock:notation]
make_pair(lower_bound(first, last, value),
          upper_bound(first, last, value))
[codeblock:end]

[:en@~] or

[codeblock:notation]
make_pair(lower_bound(first, last, value, comp),
          upper_bound(first, last, value, comp))
[codeblock:end]

[para:complexity]
[:en] At most 2 * log[_2]([`last - first]) + [=bigoh](1) comparisons.
[exit:description]
