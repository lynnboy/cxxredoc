[section#expr.shift
    [:en] Shift operators
    [:zh_CN]
]

[para]
[:en]
[%expression[!left-shift-operator]]
[%expression[!right-shift-operator]]
[%shift operator[see left shift operator][see right shift operator]]
[%operator right shift[see right shift operator]]
[%operator left shift[see left shift operator]]
The shift operators [`<<] and [`>>] group left-to-right.

[:en]
[%left shift operator]
[%[`<<][see left shift operator]]
[%right shift operator]
[%[`>>][see right shift operator]]

[syntax]
[rule shift-expression [:zh_CN] ]
    [| additive-expression ]
    [| shift-expression [`<<] additive-expression ]
    [| shift-expression [`>>] additive-expression ]
[rule:end]
[syntax:end]

[:en]
The operands shall be of integral or unscoped enumeration type and integral
promotions are performed.

[:en]
The type of the result is that of the promoted left operand.

[:en]
[%left shift[!undefined]]
The behavior is undefined if the right operand is negative, or greater than or
equal to the length in bits of the promoted left operand.

[para]
[:en]
The value of [`E1 << E2] is [`E1] left-shifted [`E2] bit positions; vacated bits
are zero-filled.

[:en]
If [`E1] has an unsigned type, the value of the result is
[$[`E1][=times]2[^[`E2]]], reduced modulo one more than the maximum value
representable in the result type.

[:en]
Otherwise, if [`E1] has a signed type and non-negative value, and
[$[`E1][=times]2[^[`E2]]] is representable in the corresponding unsigned type of
the result type, then that value, converted to the result type, is the resulting
value; otherwise, the behavior is undefined.

[para]
[:en]
The value of [`E1 >> E2] is [`E1] right-shifted [`E2] bit positions.

[:en]
If [`E1] has an unsigned type or if [`E1] has a signed type and a non-negative
value, the value of the result is the integral part of the quotient of
[$[`E1]/2[^[`E2]]].

[:en]
If [`E1]
[%right shift[!implementation defined]]
has a signed type and a negative value, the resulting value is
[%@impldef result of right shift of negative value] implementation-defined.
