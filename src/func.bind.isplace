[section#func.bind.isplace
    [:en] Class template [`is_placeholder]
]

[%@library is_placeholder]
[codeblock:synopsis]
namespace std {
  template<class T> struct is_placeholder; // [:en] see below
}
[codeblock:end]

[para]
[:en]
[`is_placeholder] can be used to detect the standard placeholders [`_1], [`_2],
and so on. [`bind] uses [`is_placeholder] to detect placeholders.

[para]
[:en]
Instantiations of the [`is_placeholder] template shall meet the UnaryTypeTrait
requirements ([#meta.rqmts]).

[:en]
The implementation shall provide a definition that has the BaseCharacteristic of
[`integral_constant<int, J>] if [`T] is the type of [`std::placeholders::_J],
otherwise it shall have a BaseCharacteristic of [`integral_constant<int, 0>].

[:en]
A program may specialize this template for a user-defined type [`T] to have a
BaseCharacteristic of [`integral_constant<int, [$N]>] with [`[$N] > 0] to
indicate that [`T] should be treated as a placeholder type.
