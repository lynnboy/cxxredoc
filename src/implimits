[section:annex@informative#implimits
    [:en] Implementation quantities
]

[para]
[:en] Because computers are finite, [=Cpp] implementations are inevitably
limited in the size of the programs they can successfully process.

[:en] Every implementation shall document those limitations where known.

[:en] This documentation may cite fixed limits where they exist, say how to
compute variable limits as a function of available resources, or say that fixed
limits do not exist or are unknown.

[para]
[:en] The limits may constrain quantities that include those described below or
others.

[:en] The bracketed number following each quantity is recommended as the minimum
for that quantity.

[:en] However, these quantities are only guidelines and do not determine
compliance.

[list]
[item]
[:en] Nesting levels of compound statements, iteration control structures, and
selection control structures [256].
[item]
[:en] Nesting levels of conditional inclusion [256].
[item]
[:en] Pointer, array, and function declarators (in any combination) modifying a
class, arithmetic, or incomplete type in a declaration [256].
[item]
[:en] Nesting levels of parenthesized expressions within a full-expression
[256].
[item]
[:en] Number of characters in an internal identifier or macro name [1 024].
[item]
[:en] Number of characters in an external identifier [1 024].
[item]
[:en] External identifiers in one translation unit [65 536].
[item]
[:en] Identifiers with block scope declared in one block [1 024].
[item]
[:en] Macro identifiers simultaneously defined in one translation unit [65 536].
[item]
[:en] Parameters in one function definition [256].
[item]
[:en] Arguments in one function call [256].
[item]
[:en] Parameters in one macro definition [256].
[item]
[:en] Arguments in one macro invocation [256].
[item]
[:en] Characters in one logical source line [65 536].
[item]
[:en] Characters in a string literal (after concatenation) [65 536].
[item]
[:en] Size of an object [262 144].
[item]
[:en] Nesting levels for [`#include] files [256].
[item]
[:en] Case labels for a [`switch] statement (excluding those for any nested
[`switch] statements) [16 384].
[item]
[:en] Data members in a single class [16 384].
[item]
[:en] Enumeration constants in a single enumeration [4 096].
[item]
[:en] Levels of nested class definitions in a single [~member-specification]
[256].
[item]
[:en] Functions registered by [`atexit()] [32].
[item]
[:en] Functions registered by [`at_quick_exit()] [32].
[item]
[:en] Direct and indirect base classes [16 384].
[item]
[:en] Direct base classes for a single class [1 024].
[item]
[:en] Members declared in a single class [4 096].
[item]
[:en] Final overriding virtual functions in a class, accessible or not [16 384].
[item]
[:en] Direct and indirect virtual bases of a class [1 024].
[item]
[:en] Static members of a class [1 024].
[item]
[:en] Friend declarations in a class [4 096].
[item]
[:en] Access control declarations in a class [4 096].
[item]
[:en] Member initializers in a constructor definition [6 144].
[item]
[:en] Scope qualifications of one identifier [256].
[item]
[:en] Nested external specifications [1 024].
[item]
[:en] Recursive [`constexpr] function invocations [512].
[item]
[:en] Full-expressions evaluated within a core constant expression [1 048 576].
[item]
[:en] Template arguments in a template declaration [1 024].
[item]
[:en] Recursively nested template instantiations, including substitution during
template argument deduction ([#temp.deduct]) [1 024].
[item]
[:en] Handlers per [`try] block [256].
[item]
[:en] Throw specifications on a single function declaration [256].
[item]
[:en] Number of placeholders ([#func.bind.place]) [10].
[list:end]
