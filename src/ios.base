[section#ios.base
    [:en] Class [`ios_base]
]

[%@library ios_base]
[codeblock:synopsis [special unspecified T1 T2 T3 T4] ]
namespace std {
  class ios_base {
  public:
    class failure;

    // [:en] [#ios::fmtflags] [`fmtflags]
    typedef T1 fmtflags;
    static constexpr fmtflags boolalpha = unspecified;
    static constexpr fmtflags dec = unspecified;
    static constexpr fmtflags fixed = unspecified;
    static constexpr fmtflags hex = unspecified;
    static constexpr fmtflags internal = unspecified;
    static constexpr fmtflags left = unspecified;
    static constexpr fmtflags oct = unspecified;
    static constexpr fmtflags right = unspecified;
    static constexpr fmtflags scientific = unspecified;
    static constexpr fmtflags showbase = unspecified;
    static constexpr fmtflags showpoint = unspecified;
    static constexpr fmtflags showpos = unspecified;
    static constexpr fmtflags skipws = unspecified;
    static constexpr fmtflags unitbuf = unspecified;
    static constexpr fmtflags uppercase = unspecified;
    static constexpr fmtflags adjustfield = [=Seebelow];
    static constexpr fmtflags basefield = [=Seebelow];
    static constexpr fmtflags floatfield = [=Seebelow];

    // [:en] [#ios::iostate] [`iostate]
    typedef T2 iostate;
    static constexpr iostate badbit = unspecified;
    static constexpr iostate eofbit = unspecified;
    static constexpr iostate failbit = unspecified;
    static constexpr iostate goodbit = [=Seebelow];

    // [:en] [#ios::openmode] [`openmode]
    typedef T3 openmode;
    static constexpr openmode app = unspecified;
    static constexpr openmode ate = unspecified;
    static constexpr openmode binary = unspecified;
    static constexpr openmode in = unspecified;
    static constexpr openmode out = unspecified;
    static constexpr openmode trunc = unspecified;

    // [:en] [#ios::seekdir] [`seekdir]
    typedef T4 seekdir;
    static constexpr seekdir beg = unspecified;
    static constexpr seekdir cur = unspecified;
    static constexpr seekdir end = unspecified;

    class Init;

    // [:en] [#fmtflags.state] fmtflags state:
    fmtflags flags() const;
    fmtflags flags(fmtflags fmtfl);
    fmtflags setf(fmtflags fmtfl);
    fmtflags setf(fmtflags fmtfl, fmtflags mask);
    void unsetf(fmtflags mask);

    streamsize precision() const;
    streamsize precision(streamsize prec);
    streamsize width() const;
    streamsize width(streamsize wide);

    // [:en] [#ios.base.locales] locales:
    locale imbue(const locale& loc);
    locale getloc() const;

    // [:en] [#ios.base.storage] storage:
    static int xalloc();
    long&  iword(int index);
    void*& pword(int index);

    // [:en] destructor
    virtual ~ios_base();

    // [:en] [#ios.base.callback] callbacks;
    enum event { erase_event, imbue_event, copyfmt_event };
    typedef void (*event_callback)(event, ios_base&, int index);
    void register_callback(event_callback fn, int index);

    ios_base(const ios_base&) = delete;
    ios_base& operator=(const ios_base&) = delete;

    static bool sync_with_stdio(bool sync = true);

  protected:
    ios_base();

  private:
    static int index;  // [=Expos]
    long* iarray;      // [=Expos]
    void** parray;     // [=Expos]
  };
}
[codeblock:end]

[para]
[:en] [`ios_base] defines several member types:

[list]
[item]
[:en] a class [`failure] derived from [`system_error];
[item]
[:en] a class [`Init];
[item]
[:en] three bitmask types, [`fmtflags], [`iostate], and [`openmode];
[item]
[:en] an enumerated type, [`seekdir].
[list:end]

[para]
[:en] It maintains several kinds of data:

[list]
[item]
[:en] state information that reflects the integrity of the stream buffer;
[item]
[:en] control information that influences how to interpret (format) input
sequences and how to generate (format) output sequences;
[item]
[:en] additional information that is stored by the program for its private use.
[list:end]

[para]
[enter:note]
[:en] For the sake of exposition, the maintained data is presented here as:

[list]
[item]
[:en] [`static int index], specifies the next available unique index for the
integer or pointer arrays maintained for the private use of the program,
initialized to an unspecified value;
[item]
[:en] [`long* iarray], points to the first element of an arbitrary-length
[`long] array maintained for the private use of the program;
[item]
[:en] [`void** parray], points to the first element of an arbitrary-length
pointer array maintained for the private use of the program.
[exit:note]
[list:end]

[include ios.types]

[include fmtflags.state]

[include ios.base.locales]

[include ios.members.static]

[include ios.base.storage]

[include ios.base.callback]

[include ios.base.cons]
