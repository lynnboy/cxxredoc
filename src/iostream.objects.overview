[section#iostream.objects.overview
    [:en] Overview
]

[para:synopsis]
[:en] Header [`<iostream>] synopsis

[%@library <iostream> [sortas iostream]]

[codeblock:synopsis]
#include <ios>
#include <streambuf>
#include <istream>
#include <ostream>

namespace std {
  extern istream cin;
  extern ostream cout;
  extern ostream cerr;
  extern ostream clog;

  extern wistream wcin;
  extern wostream wcout;
  extern wostream wcerr;
  extern wostream wclog;
}
[codeblock:end]

[para]
[:en] The header [`<iostream>] declares objects that associate objects with the
standard C streams provided for by the functions declared in [%@library <cstdio>
[sortas cstdio]] [`<cstdio>] ([#c.files]), and includes all the headers
necessary to use these objects.

[para]
[:en] The objects are constructed and the associations are established at some
time prior to or during the first time an object of class [`ios_base::Init] is
constructed, and in any case before the body of [`main] begins execution.

[footnote]
[:en] If it is possible for them to do so, implementations are encouraged to
initialize the objects earlier than required.
[footnote:end]

[:en] The objects are not destroyed during program execution.

[footnote]
[:en] Constructors and destructors for static objects can access these objects
to read input from [`stdin] or write output to [`stdout] or [`stderr].
[footnote:end]

[:en] The results of including [`<iostream>] in a translation unit shall be as
if [`<iostream>] defined an instance of [`ios_base::Init] with static storage
duration.

[:en] Similarly, the entire program shall behave as if there were at least one
instance of [`ios_base::Init] with static storage duration.

[para]
[:en] Mixing operations on corresponding wide- and narrow-character streams
follows the same semantics as mixing such operations on [`FILE]s, as specified
in Amendment 1 of the ISO C standard.

[para]
[:en] Concurrent access to a synchronized ([#ios.members.static]) standard
iostream object[=']s formatted and unformatted input ([#istream]) and output
([#ostream]) functions or a standard C stream by multiple threads shall not
result in a data race ([#intro.multithread]).

[enter:note]
[:en] Users must still synchronize concurrent use of these objects and streams
by multiple threads if they wish to avoid interleaved characters.
[exit:note]
