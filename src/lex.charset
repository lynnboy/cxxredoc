[section#lex.charset
    [:en] Character sets
    [:zh_CN] 
]

[index:begin#character.set
    [:en] character set
]

[para]
[:en]
[%character set[!basic source]]
The [+basic source character set] consists of 96 characters: the space character,
the control characters representing horizontal tab, vertical tab, form feed, and
new-line, plus the following 91 graphical characters:

[footnote]
[:en]
The glyphs for the members of the basic source character set are intended to
identify characters from the subset of ISO/IEC 10646 which corresponds to the
ASCII character set.

[:en]
However, because the mapping from source file characters to the source character
set (described in translation phase 1) is specified as implementation-defined,
an implementation is required to document how the basic source characters are
represented in source files.
[footnote:end]

[codeblock:literal]
a b c d e f g h i j k l m n o p q r s t u v w x y z

A B C D E F G H I J K L M N O P Q R S T U V W X Y Z

0 1 2 3 4 5 6 7 8 9

_ { } [ ] # ( ) < > % : ; . ? * + - / ^ & | ~ ! = , \ " '
[codeblock:end]

[para]
[:en]
The [~universal-character-name] construct provides a way to name other
characters.

[syntax]
[rule hex-quad]
    [| hexadecimal-digit hexadecimal-digit hexadecimal-digit hexadecimal-digit]
[rule:end]

[rule universal-character-name]
    [| [`\u] hex-quad]
    [| [`\U] hex-quad hex-quad]
[rule:end]
[syntax:end]

[:en]
The character designated by the universal-character-name [`\UNNNNNNNN] is that
character whose character short name in ISO/IEC 10646 is [`NNNNNNNN];

[:en]
the character designated by the universal-character-name [`\uNNNN] is that
character whose character short name in ISO/IEC 10646 is [`0000NNNN].

[:en]
If the hexadecimal value for a universal-character-name corresponds to a
surrogate code point (in the range 0xD800[=-]0xDFFF, inclusive), the program is
ill-formed.

[:en]
Additionally, if the hexadecimal value for a universal-character-name outside
the [~c-char-sequence], [~s-char-sequence], or [~r-char-sequence] of a character
or string literal corresponds to a control character (in either of the ranges
0x00[=-]0x1F or 0x7F[=-]0x9F, both inclusive) or to a character in the basic
source character set, the program is ill-formed.

[footnote]
[:en]
A sequence of characters resembling a universal-character-name in an
[~r-char-sequence] ([#lex.string]) does not form a universal-character-name.
[footnote:end]

[para]
[:en]
The [+basic execution character set] and the [+basic execution wide-character
set] shall each contain all the members of the basic source character set, plus
control characters representing alert, backspace, and carriage return, plus a
[+null character] (respectively, [+null wide character]), whose value is 0.

[:en]
For each basic execution character set, the values of the members shall be
non-negative and distinct from one another.

[:en]
In both the source and execution basic character sets, the value of each
character after [`0] in the above list of decimal digits shall be one greater
than the value of the previous.

[:en]
The [+execution character set] and the [+execution wide-character set] are
[%@impldef execution character-set and execution wide-character set]
implementation-defined supersets of the basic execution character set and the
basic execution wide-character set, respectively.

[:en]
The values of the members of the execution character sets and the sets of
additional members are locale-specific.

[index:end#character.set]
