[section#locale.category
    [:en] Type [`locale::category]
]

[%@library locale[!category]]
[%@library category[!locale]]
[codeblock:declaration]
typedef int category;
[codeblock:end]

[para]
[:en]
[+Valid] [`category] values include the [`locale] member bitmask elements
[`collate], [`ctype], [`monetary], [`numeric], [`time], and [`messages], each of
which represents a single locale category.

[:en]
In addition, [`locale] member bitmask constant [`none] is defined as zero and
represents no category.

[:en]
And [`locale] member bitmask constant [`all] is defined such that the expression

[codeblock:notation]
(collate | ctype | monetary | numeric | time | messages | all) == all
[codeblock:end]

[:en@~]
is [`true], and represents the union of all categories.

[:en]
Further, the expression [`(X | Y)], where [`X] and [`Y] each represent a single
category, represents the union of the two categories.

[para]
[:en]
[`locale] member functions expecting a [`category] argument require one of the
[`category] values defined above, or the union of two or more such values.

[:en]
Such a [`category] value identifies a set of locale categories.

[:en]
Each locale category, in turn, identifies a set of locale facets, including at
least those shown in Table [#tab:localization.category.facets].

[table:listing#tab:localization.category.facets
    [:en] Locale category facets
    [columns
        [column@headercenter
            [:en] Category
        ]
        [column@headercenter
            [:en] Includes facets
        ]
    ]
    [border:row@both]
]

[|] collate
[|] [`collate<char>], [`collate<wchar_t>]

[|] ctype
[|] [`ctype<char>], [`ctype<wchar_t>], [`codecvt<char,char,mbstate_t>],
    [`codecvt<char16_t,char,mbstate_t>], [`codecvt<char32_t,char,mbstate_t>],
    [`codecvt<wchar_t,char,mbstate_t>]

[|] monetary
[|] [`moneypunct<char>], [`moneypunct<wchar_t>], [`moneypunct<char,true>],
    [`moneypunct<wchar_t,true>], [`money_get<char>], [`money_get<wchar_t>],
    [`money_put<char>], [`money_put<wchar_t>]

[|] numeric
[|] [`numpunct<char>], [`numpunct<wchar_t>], [`num_get<char>],
    [`num_get<wchar_t>], [`num_put<char>], [`num_put<wchar_t>]

[|] time
[|] [`time_get<char>], [`time_get<wchar_t>], [`time_put<char>],
    [`time_put<wchar_t>]

[|] messages
[|] [`messages<char>], [`messages<wchar_t>]

[table:end]

[para]
[:en]
For any locale [`loc] either constructed, or returned by [`locale::classic()],
and any facet [`Facet] shown in Table [#tab:localization.category.facets],
[`has_facet<Facet>(loc)] is true.

[:en]
Each [`locale] member function which takes a [`locale::category] argument
operates on the corresponding set of facets.

[para]
[:en]
An implementation is required to provide those specializations for facet
templates identified as members of a category, and for those shown in Table
[#tab:localization.required.specializations].

[table:listing#tab:localization.required.specializations
    [:en] Required specializations
    [columns
        [column@headercenter
            [:en] Category
        ]
        [column@headercenter
            [:en] Includes facets
        ]
    ]
    [border:row@both]
]

[|] collate
[|] [`collate_byname<char>], [`collate_byname<wchar_t>]

[|] ctype
[|] [`ctype_byname<char>], [`ctype_byname<wchar_t>],
    [`codecvt_byname<char,char,mbstate_t>],
    [`codecvt_byname<char16_t,char,mbstate_t>],
    [`codecvt_byname<char32_t,char,mbstate_t>],
    [`codecvt_byname<wchar_t,char,mbstate_t>]

[|] monetary
[|] [`moneypunct_byname<char,International>],
    [`moneypunct_byname<wchar_t,International>],
    [`money_get<C,InputIterator>], [`money_put<C,OutputIterator>]

[|] numeric
[|] [`numpunct_byname<char>], [`numpunct_byname<wchar_t>],
    [`num_get<C,InputIterator>], [`num_put<C,OutputIterator>]

[|] time
[|] [`time_get<char,InputIterator>], [`time_get_byname<char,InputIterator>],
    [`time_get<wchar_t,InputIterator>],
    [`time_get_byname<wchar_t,InputIterator>],
    [`time_put<char,OutputIterator>],
    [`time_put_byname<char,OutputIterator>],
    [`time_put<wchar_t,OutputIterator>],
    [`time_put_byname<wchar_t,OutputIterator>]

[|] messages
[|] [`messages_byname<char>], [`messages_byname<wchar_t>]

[table:end]

[para]
[:en]
The provided implementation of members of facets [`num_get<charT>] and
[`num_put<charT>] calls [`use_facet<F>(l)] only for facet [`F] of types
[`numpunct<charT>] and [`ctype<charT>], and for locale [`l] the value obtained
by calling member [`getloc()] on the [`ios_base&] argument to these functions.

[para]
[:en]
In declarations of facets, a template parameter with name [`InputIterator] or
[`OutputIterator] indicates the set of all possible specializations on
parameters that satisfy the requirements of an Input Iterator or an Output
Iterator, respectively ([#iterator.requirements]).

[:en]
A template parameter with name [`C] represents the set of types containing
[`char], [`wchar_t], and any other implementation-defined character types that
satisfy the requirements for a character on which any of the iostream components
can be instantiated.

[:en]
A template parameter with name [`International] represents the set of all
possible specializations on a bool parameter.
