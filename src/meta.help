[section#meta.help
    [:en] Helper classes
]

[codeblock:synopsis]
namespace std {
  template <class T, T v>
  struct integral_constant {
    static constexpr T value = v;
    typedef T value_type;
    typedef integral_constant<T,v> type;
    constexpr operator value_type() const noexcept { return value; }
    constexpr value_type operator()() const noexcept { return value; }
  };
  typedef integral_constant<bool, true> true_type;
  typedef integral_constant<bool, false> false_type;
}
[codeblock:end]

[para]
[:en]
The class template [`integral_constant] and its associated typedefs [`true_type]
and [`false_type] are used as base classes to define the interface for various
type traits.
