[section#meta.rqmts
    [:en] Requirements
]

[para]
[:en]
A [def UnaryTypeTrait] describes a property of a type.

[:en]
It shall be a class template that takes one template type argument and,
optionally, additional arguments that help define the property being described.

[:en]
It shall be [`DefaultConstructible], [`CopyConstructible], and publicly and
unambiguously derived, directly or indirectly, from its
[def BaseCharacteristic], which is a specialization of the template
[`integral_constant] ([#meta.help]), with the arguments to the template
[`integral_constant] determined by the requirements for the particular property
being described.

[:en]
The member names of the BaseCharacteristic shall not be hidden and shall be
unambiguously available in the UnaryTypeTrait.

[para]
[:en]
A [def BinaryTypeTrait] describes a relationship between two types.

[:en]
It shall be a class template that takes two template type arguments and,
optionally, additional arguments that help define the relationship being
described.

[:en]
It shall be [`DefaultConstructible], [`CopyConstructible], and publicly and
unambiguously derived, directly or indirectly, from its [+BaseCharacteristic],
which is a specialization of the template [`integral_constant] ([#meta.help]),
with the arguments to the template [`integral_constant] determined by the
requirements for the particular relationship being described.

[:en]
The member names of the BaseCharacteristic shall not be hidden and shall be
unambiguously available in the BinaryTypeTrait.

[para]
[:en]
A [def TransformationTrait] modifies a property of a type.

[:en]
It shall be a class template that takes one template type argument and,
optionally, additional arguments that help define the modification.

[:en]
It shall define a publicly accessible nested type named [`type], which shall be
a synonym for the modified type.
