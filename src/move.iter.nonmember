[section#move.iter.nonmember
    [:en] [`move_iterator] non-member functions
]

[%@library operator-[!move_iterator]]
[%@library move_iterator[!operator-]]
[codeblock:declaration]
template <class Iterator1, class Iterator2>
    auto operator-(
    const move_iterator<Iterator1>& x,
    const move_iterator<Iterator2>& y) -> decltype(x.base() - y.base());
[codeblock:end]

[enter:description]
[para:returns]
[:en] [`x.base() - y.base()].
[exit:description]

[%@library operator+[!move_iterator]]
[%@library move_iterator[!operator+]]
[codeblock:declaration]
template <class Iterator>
  move_iterator<Iterator> operator+(
    typename move_iterator<Iterator>::difference_type n, const move_iterator<Iterator>& x);
[codeblock:end]

[enter:description]
[para:returns]
[:en] [`x + n].
[exit:description]

[%@library make_move_iterator]
[codeblock:declaration]
template <class Iterator>
move_iterator<Iterator> make_move_iterator(Iterator i);
[codeblock:end]

[enter:description]
[para:returns]
[:en] [`move_iterator<Iterator>(i)].
[exit:description]
