[section#move.iter.op.comp
    [:en] [`move_iterator] comparisons
]

[%@library operator==[!move_iterator]]
[%@library move_iterator[!operator==]]
[codeblock:declaration]
template <class Iterator1, class Iterator2>
bool operator==(const move_iterator<Iterator1>& x, const move_iterator<Iterator2>& y);
[codeblock:end]

[enter:description]
[para:returns]
[:en] [`x.base() == y.base()].
[exit:description]

[%@library operator!=[!move_iterator]]
[%@library move_iterator[!operator!=]]
[codeblock:declaration]
template <class Iterator1, class Iterator2>
bool operator!=(const move_iterator<Iterator1>& x, const move_iterator<Iterator2>& y);
[codeblock:end]

[enter:description]
[para:returns]
[:en] [`!(x == y)].
[exit:description]

[%@library operator<[!move_iterator]]
[%@library move_iterator[!operator<]]
[codeblock:declaration]
template <class Iterator1, class Iterator2>
bool operator<(const move_iterator<Iterator1>& x, const move_iterator<Iterator2>& y);
[codeblock:end]

[enter:description]
[para:returns]
[:en] [`x.base() < y.base()].
[exit:description]

[%@library operator<=[!move_iterator]]
[%@library move_iterator[!operator<=]]
[codeblock:declaration]
template <class Iterator1, class Iterator2>
bool operator<=(const move_iterator<Iterator1>& x, const move_iterator<Iterator2>& y);
[codeblock:end]

[enter:description]
[para:returns]
[:en] [`!(y < x)].
[exit:description]

[%@library operator>[!move_iterator]]
[%@library move_iterator[!operator>]]
[codeblock:declaration]
template <class Iterator1, class Iterator2>
bool operator>(const move_iterator<Iterator1>& x, const move_iterator<Iterator2>& y);
[codeblock:end]

[enter:description]
[para:returns]
[:en] [`y < x].
[exit:description]

[%@library operator>=[!move_iterator]]
[%@library move_iterator[!operator>=]]
[codeblock:declaration]
template <class Iterator1, class Iterator2>
bool operator>=(const move_iterator<Iterator1>& x, const move_iterator<Iterator2>& y);
[codeblock:end]

[enter:description]
[para:returns]
[:en] [`!(x < y)].
[exit:description]
