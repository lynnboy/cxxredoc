[section#new.delete.placement
    [:en] Placement forms
]

[para]
[:en]
These functions are reserved, a [=Cpp] program may not define functions that
displace the versions in the Standard [=Cpp] library ([#constraints]).

[:en]
The provisions of ([#basic.stc.dynamic]) do not apply to these reserved
placement forms of [`operator new] and [`operator delete].

[%@library new[!operator]]
[codeblock:declaration]
void* operator new(std::size_t size, void* ptr) noexcept;
[codeblock:end]

[enter:description]
[para:returns]
[:en]
[`ptr].

[para:notes]
[:en]
Intentionally performs no other action.

[para]
[enter:example]
[:en]
This can be useful for constructing an object at a known address:

[codeblock]
void* place = operator new(sizeof(Something));
Something* p = new (place) Something();
[codeblock:end]
[exit:example]
[exit:description]

[%@library new[!operator]]
[codeblock:declaration]
void* operator new[](std::size_t size, void* ptr) noexcept;
[codeblock:end]

[enter:description]
[para:returns]
[:en]
[`ptr].

[para:notes]
[:en]
Intentionally performs no other action.
[exit:description]

[%@library new[!operator]]
[codeblock:declaration]
void operator delete(void* ptr, void*) noexcept;
[codeblock:end]

[enter:description]
[para:effects]
[:en]
Intentionally performs no action.

[para:requires]
[:en]
If an implementation has strict pointer safety ([#basic.stc.dynamic.safety])
then [`ptr] shall be a safely-derived pointer.

[para:notes]
[:en]
Default function called when any part of the initialization in a placement
[~new-expression] that invokes the library[=']s non-array placement operator new
terminates by throwing an exception ([#expr.new]).
[exit:description]

[%@library new[!operator]]
[codeblock:declaration]
void operator delete[](void* ptr, void*) noexcept;
[codeblock:end]

[enter:description]
[para:effects]
[:en]
Intentionally performs no action.

[para:requires]
[:en]
If an implementation has strict pointer safety ([#basic.stc.dynamic.safety])
then [`ptr] shall be a safely-derived pointer.

[para:notes]
[:en]
Default function called when any part of the initialization in a placement
[~new-expression] that invokes the library[=']s array placement operator new
terminates by throwing an exception ([#expr.new]).
[exit:description]
