[section#ostream.inserters
    [:en] [`basic_ostream::operator<<]
]

[%@library operator<<[!basic_ostream]]
[codeblock:declaration]
basic_ostream<charT,traits>& operator<<
    (basic_ostream<charT,traits>& (*pf)(basic_ostream<charT,traits>&));
[codeblock:end]

[enter:description]
[para:effects]
[:en] None.

[:en] Does not behave as a formatted output function (as described in
[#ostream.formatted.reqmts]).

[para:returns]
[:en] [`pf(*this)].

[footnote]
[:en] See, for example, the function signature [%@library endl]
[`endl(basic_ostream&)] ([#ostream.manip]).
[footnote:end]
[exit:description]

[%@library operator<<[!basic_ostream]]
[%@library basic_ostream[!operator<<]]
[codeblock:declaration]
basic_ostream<charT,traits>& operator<<
    (basic_ios<charT,traits>& (*pf)(basic_ios<charT,traits>&));
[codeblock:end]

[enter:description]
[para:effects]
[:en] Calls [`pf(*this)].

[:en] This inserter does not behave as a formatted output function (as described
in [#ostream.formatted.reqmts]).

[para:returns]
[:en] [`*this].

[footnote]
[:en] See, for example, the function signature [%@library dec] [`dec(ios_base&)]
([#basefield.manip]).
[footnote:end]
[exit:description]

[%@library operator<<[!basic_ostream]]
[%@library basic_ostream[!operator<<]]
[codeblock:declaration]
basic_ostream<charT,traits>& operator<<
    (ios_base& (*pf)(ios_base&));
[codeblock:end]

[enter:description]
[para:effects]
[:en] Calls [`pf(*this)].

[:en] This inserter does not behave as a formatted output function (as described
in [#ostream.formatted.reqmts]).

[para:returns]
[:en] [`*this].
[exit:description]

[%@library operator<<[!basic_ostream]]
[%@library basic_ostream[!operator<<]]
[codeblock:declaration]
basic_ostream<charT,traits>& operator<<
    (basic_streambuf<charT,traits>* sb);
[codeblock:end]

[enter:description]
[para:effects]
[:en] Behaves as an unformatted output function (as described in
[#ostream.unformatted], paragraph 1).

[:en] After the sentry object is constructed, if [`sb] is null calls
[`setstate(badbit)] (which may throw [`ios_base::failure]).

[para]
[:en] Gets characters from [`sb] and inserts them in [`*this].

[:en] Characters are read from [`sb] and inserted until any of the following
occurs:

[list]
[item]
[:en] end-of-file occurs on the input sequence;
[item]
[:en] inserting in the output sequence fails (in which case the character to be
inserted is not extracted);
[item]
[:en] an exception occurs while getting a character from [`sb].
[list:end]

[para]
[:en] If the function inserts no characters, it calls [`setstate(failbit)]
(which may throw [`ios_base::failure] ([#iostate.flags])).

[:en] If an exception was thrown while extracting a character, the function sets
[`failbit] in error state, and if [`failbit] is on in [`exceptions()] the caught
exception is rethrown.

[para:returns]
[:en] [`*this].
[exit:description]
