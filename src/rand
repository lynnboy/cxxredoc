[/
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%                                                                %%%
%%%                                                                %%%
%%%      Numerical facilities:  Random number generation           %%%
%%%                    (without concepts)                          %%%
%%%                                                                %%%
%%%                                                                %%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/]

[section#rand
    [:en] Random number generation
]

[%:begin#random.number.generation
    [:en] random number generation
]
[:en]
[%distribution[see random number distribution]]
[%engine[see random number engine]]
[%engine adaptor[see random number engine adaptor]]
[%random number generator[see uniform random number generator]]

[para]
[:en] This subclause defines a facility for generating (pseudo-)random numbers.

[para]
[:en] In addition to a few utilities, four categories of entities are described:
[+uniform random number generators], [+random number engines], [+random number
engine adaptors], and [+random number distributions].

[:en] These categorizations are applicable to types that satisfy the
corresponding requirements, to objects instantiated from such types, and to
templates producing such types when instantiated.

[enter:note]
[:en] These entities are specified in such a way as to permit the binding of any
uniform random number generator object [`e] as the argument to any random number
distribution object [`d], thus producing a zero-argument function object such as
given by [`bind(d,e)].
[exit:note]

[para]
[:en]
[%[`result_type][!entity characterization based on]]
Each of the entities specified via this subclause has an associated arithmetic
type ([#basic.fundamental]) identified as [`result_type].

[:en] With [`T] as the [`result_type] thus associated with such an entity, that
entity is characterized:

[list:ol@arparen]
[item]
[:en] as [+boolean] or equivalently as [+boolean-valued], if [`T] is [`bool];
[item]
[:en] otherwise as [+integral] or equivalently as [+integer-valued], if
[`numeric_limits<T>::is_integer] is [`true];
[item]
[:en] otherwise as [+floating] or equivalently as [+real-valued].
[list:end]

[:en] If integer-valued, an entity may optionally be further characterized as
[+signed] or [+unsigned], according to [`numeric_limits<T>::is_signed].

[para]
[:en] Unless otherwise specified, all descriptions of calculations in this
subclause use mathematical real numbers.

[para]
[:en] Throughout this subclause, the operators [$@sf bitand], [$@sf bitor], and
[$@sf xor] denote the respective conventional bitwise operations.

[:en] Further:

[list:ol@arparen]
[item]
[:en] the operator [$@sf rshift] denotes a bitwise right shift with zero-valued
bits appearing in the high bits of the result, and
[item]
[:en] the operator [$[$@sf lshift][_w]] denotes a bitwise left shift with
zero-valued bits appearing in the low bits of the result, and whose result is
always taken modulo [$2[^w]].
[list:end]

[include rand.req]

[include rand.synopsis]

[%:begin#random.number.generation.engines
    [:en] random number generation [!engines]
]

[include rand.eng]

[include rand.adapt]

[%:end#random.number.generation.engines]

[include rand.predef]

[include rand.device]

[include rand.util]

[include rand.dist]

[%:end#random.number.generation]

[/
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/]
