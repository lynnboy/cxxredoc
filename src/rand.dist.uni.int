[/
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% uniform_int_distribution distribution:
/]

[section#rand.dist.uni.int
    [:en] Class template [`uniform_int_distribution]
]

[%@library uniform_int_distribution]
[%[:en]random number distribution[![`uniform_int_distribution]]]

[para]
[:en] A [`uniform_int_distribution] random number distribution produces random
integers [$i], [$a [=leq] i [=leq] b], distributed according to the constant
discrete probability function
[%discrete probability function[![`uniform_int_distribution]]]
[%[`uniform_int_distribution][!discrete probability function]]

[math]
P(i | a, b) = 1 / (b - a + 1) .
[math:end]

[codeblock:synopsis [special unspecified] ]
template<class IntType = int>
 class uniform_int_distribution
{
public:
 // [:en] types
 typedef IntType result_type;
 typedef unspecified param_type;

 // [:en] constructors and reset functions
 explicit uniform_int_distribution(IntType a = 0, IntType b = numeric_limits<IntType>::max());
 explicit uniform_int_distribution(const param_type& parm);
 void reset();

 // [:en] generating functions
 template<class URNG>
   result_type operator()(URNG& g);
 template<class URNG>
   result_type operator()(URNG& g, const param_type& parm);

 // [:en] property functions
 result_type a() const;
 result_type b() const;
 param_type param() const;
 void param(const param_type& parm);
 result_type min() const;
 result_type max() const;
};
[codeblock:end]

[%@library uniform_int_distribution[![:en] constructor]]
[codeblock:declaration]
explicit uniform_int_distribution(IntType a = 0, IntType b = numeric_limits<IntType>::max());
[codeblock:end]

[enter:description]
[para:requires]
[:en] [`a] [=leq] [`b].

[para:effects]
[:en] Constructs a [`uniform_int_distribution] object; [`a] and [`b] correspond
to the respective parameters of the distribution.
[exit:description]

[%@library uniform_int_distribution[!a]]
[%@library a[!uniform_int_distribution]]
[codeblock:declaration]
result_type a() const;
[codeblock:end]

[enter:description]
[para:returns]
[:en] The value of the [`a] parameter with which the object was constructed.
[exit:description]

[%@library uniform_int_distribution[!b]]
[%@library b[!uniform_int_distribution]]
[codeblock:declaration]
result_type b() const;
[codeblock:end]

[enter:description]
[para:returns]
[:en] The value of the [`b] parameter with which the object was constructed.
[exit:description]
