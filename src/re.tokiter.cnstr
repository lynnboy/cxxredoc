[section#re.tokiter.cnstr
    [:en] [`regex_token_iterator] constructors
]

[%@library regex_token_iterator[!regex_token_iterator]]
[codeblock:declaration]
regex_token_iterator();
[codeblock:end]

[enter:description]
[para:effects]
[:en] Constructs the end-of-sequence iterator.
[exit:description]

[%@library regex_token_iterator[!regex_token_iterator]]
[codeblock:declaration]
regex_token_iterator(BidirectionalIterator a, BidirectionalIterator b,
                    const regex_type& re,
                    int submatch = 0,
                    regex_constants::match_flag_type m =
                     regex_constants::match_default);

regex_token_iterator(BidirectionalIterator a, BidirectionalIterator b,
                    const regex_type& re,
                    const std::vector<int>& submatches,
                    regex_constants::match_flag_type m =
                     regex_constants::match_default);

regex_token_iterator(BidirectionalIterator a, BidirectionalIterator b,
                    const regex_type& re,
                    initializer_list<int> submatches,
                    regex_constants::match_flag_type m =
                      regex_constants::match_default);

template <std::size_t N>
  regex_token_iterator(BidirectionalIterator a, BidirectionalIterator b,
                    const regex_type& re,
                    const int (&submatches)[N],
                    regex_constants::match_flag_type m =
                     regex_constants::match_default);
[codeblock:end]

[enter:description]
[para:requires]
[:en] Each of the initialization values of [`submatches] shall be [`>= -1].

[para:effects]
[:en] The first constructor initializes the member [`subs] to hold the single
value [`submatch].

[:en] The second constructor initializes the member [`subs] to hold a copy of
the argument [`submatches].

[:en] The third and fourth constructors initialize the member [`subs] to hold a
copy of the sequence of integer values pointed to by the iterator range
[=range[submatches.begin(),submatches.end())] and
[=range[&submatches,&submatches + N)], respectively.

[para]
[:en] Each constructor then sets [`N] to 0, and [`position] to
[`position_iterator(a, b, re, m)].

[:en] If [`position] is not an end-of-sequence iterator the constructor sets
[`result] to the address of the current match.

[:en] Otherwise if any of the values stored in [`subs] is equal to -1 the
constructor sets [`*this] to a suffix iterator that points to the range
[=range[a,b)], otherwise the constructor sets [`*this] to an end-of-sequence
iterator.
[exit:description]
