[section#string.conversions
    [:en] Numeric conversions
]

[%@library stoi]
[%@library stol]
[%@library stoul]
[%@library stoll]
[%@library stoull]
[codeblock:declaration]
int stoi(const string& str, size_t* idx = 0, int base = 10);
long stol(const string& str, size_t* idx = 0, int base = 10);
unsigned long stoul(const string& str, size_t* idx = 0, int base = 10);
long long stoll(const string& str, size_t* idx = 0, int base = 10);
unsigned long long stoull(const string& str, size_t* idx = 0, int base = 10);
[codeblock:end]

[enter:description]
[para:effects]
[:en] the first two functions call [`strtol(str.c_str(), ptr, base)], and the
last three functions call [`strtoul(str.c_str(), ptr, base)],
[`strtoll(str.c_str(), ptr, base)], and [`strtoull(str.c_str(), ptr, base)],
respectively.

[:en] Each function returns the converted result, if any.

[:en] The argument [`ptr] designates a pointer to an object internal to the
function that is used to determine what to store at [`*idx].

[:en] If the function does not throw an exception and [`idx != 0], the function
stores in [`*idx] the index of the first unconverted element of [`str].

[para:returns]
[:en] The converted result.

[para:throws]
[:en] [`invalid_argument] if [`strtol], [`strtoul], [`strtoll], or [`strtoull]
reports that no conversion could be performed.

[:en] Throws [`out_of_range] if [`strtol], [`strtoul], [`strtoll] or [`strtoull]
sets [`errno] to [`ERANGE], or if the converted value is outside the range of
representable values for the return type.
[exit:description]

[%@library stof]
[%@library stol]
[%@library stold]
[codeblock:declaration]
float stof(const string& str, size_t* idx = 0);
double stod(const string& str, size_t* idx = 0);
long double stold(const string& str, size_t* idx = 0);
[codeblock:end]

[enter:description]
[para:effects]
[:en] the first two functions call [`strtod(str.c_str(), ptr)] and the third
function calls [`strtold(str.c_str(), ptr)].

[:en] Each function returns the converted result, if any.

[:en] The argument [`ptr] designates a pointer to an object internal to the
function that is used to determine what to store at [`*idx].

[:en] If the function does not throw an exception and [`idx != 0], the function
stores in [`*idx] the index of the first unconverted element of [`str].

[para:returns]
[:en] The converted result.

[para:throws]
[:en] [`invalid_argument] if [`strtod] or [`strtold] reports that no conversion
could be performed.

[:en] Throws [`out_of_range] if [`strtod] or [`strtold] sets [`errno] to
[`ERANGE] or if the converted value is outside the range of representable values
for the return type.
[exit:description]

[%@library to_string]
[codeblock:declaration]
string to_string(int val);
string to_string(unsigned val);
string to_string(long val);
string to_string(unsigned long val);
string to_string(long long val);
string to_string(unsigned long long val);
string to_string(float val);
string to_string(double val);
string to_string(long double val);
[codeblock:end]

[enter:description]
[para:returns]
[:en] Each function returns a [`string] object holding the character
representation of the value of its argument that would be generated by calling
[`sprintf(buf, fmt, val)] with a format specifier of [`"%d"], [`"%u"], [`"%ld"],
[`"%lu"], [`"%lld"], [`"%llu"], [`"%f"], [`"%f"], or [`"%Lf"], respectively,
where [`buf] designates an internal character buffer of sufficient size.
[exit:description]

[%@library stoi]
[%@library stol]
[%@library stoul]
[%@library stoll]
[%@library stoull]
[codeblock:declaration]
int stoi(const wstring& str, size_t* idx = 0, int base = 10);
long stol(const wstring& str, size_t* idx = 0, int base = 10);
unsigned long stoul(const wstring& str, size_t* idx = 0, int base = 10);
long long stoll(const wstring& str, size_t* idx = 0, int base = 10);
unsigned long long stoull(const wstring& str, size_t* idx = 0, int base = 10);
[codeblock:end]

[enter:description]
[para:effects]
[:en] the first two functions call [`wcstol(str.c_str(), ptr, base)], and the
last three functions call [`wcstoul(str.c_str(), ptr, base)],
[`wcstoll(str.c_str(), ptr, base)], and [`wcstoull(str.c_str(), ptr, base)],
respectively.

[:en] Each function returns the converted result, if any.

[:en] The argument [`ptr] designates a pointer to an object internal to the
function that is used to determine what to store at [`*idx].

[:en] If the function does not throw an exception and [`idx != 0], the function
stores in [`*idx] the index of the first unconverted element of [`str].

[para:returns]
[:en] The converted result.

[para:throws]
[:en] [`invalid_argument] if [`wcstol], [`wcstoul], [`wcstoll], or [`wcstoull]
reports that no conversion could be performed.

[:en] Throws [`out_of_range] if the converted value is outside the range of
representable values for the return type.
[exit:description]

[%@library stof]
[%@library stod]
[%@library stold]
[codeblock:declaration]
float stof(const wstring& str, size_t* idx = 0);
double stod(const wstring& str, size_t* idx = 0);
long double stold(const wstring& str, size_t* idx = 0);
[codeblock:end]

[enter:description]
[para:effects]
[:en] the first two functions call [`wcstod(str.c_str(), ptr)] and the third
function calls [`wcstold(str.c_str(), ptr)].

[:en] Each function returns the converted result, if any.

[:en] The argument [`ptr] designates a pointer to an object internal to the
function that is used to determine what to store at [`*idx].

[:en] If the function does not throw an exception and [`idx != 0], the function
stores in [`*idx] the index of the first unconverted element of [`str].

[para:returns]
[:en] The converted result.

[para:throws]
[:en] [`invalid_argument] if [`wcstod] or [`wcstold] reports that no conversion
could be performed.

[:en] Throws [`out_of_range] if [`wcstod] or [`wcstold] sets [`errno] to
[`ERANGE].
[exit:description]

[%@library to_wstring]
[codeblock:declaration]
wstring to_wstring(int val);
wstring to_wstring(unsigned val);
wstring to_wstring(long val);
wstring to_wstring(unsigned long val);
wstring to_wstring(long long val);
wstring to_wstring(unsigned long long val);
wstring to_wstring(float val);
wstring to_wstring(double val);
wstring to_wstring(long double val);
[codeblock:end]

[enter:description]
[para:returns]
[:en] Each function returns a [`wstring] object holding the character
representation of the value of its argument that would be generated by calling
[`swprintf(buf, buffsz, fmt, val)] with a format specifier of [`L"%d"],
[`L"%u"], [`L"%ld"], [`L"%lu"], [`L"%lld"], [`L"%llu"], [`L"%f"], [`L"%f"], or
[`L"%Lf"], respectively, where [`buf] designates an internal character buffer of
sufficient size [`buffsz].
[exit:description]
