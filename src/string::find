[section#string::find
    [`basic_string::find]
]

[%@library basic_string[!find]]
[%@library find[!basic_string]]
[codeblock:declaration]
size_type find(const basic_string& str,
               size_type pos = 0) const noexcept;
[codeblock:end]

[enter:description]
[para:effects]
[:en] Determines the lowest position [`xpos], if possible, such that both of
the following conditions obtain:
[:zh_CN] 如果可能，就确定其最低位置 [`xpos]，使得以下条件均可达成：

[list]
[item]
[:en] [`pos <= xpos] and [`xpos + str.size() <= size()];
[:zh_CN] [`pos <= xpos] 并且 [`xpos + str.size() <= size()]；
[item]
[%@library eq[!char_traits]]
[:en] [`traits::eq(at(xpos+I), str.at(I))] for all elements [`I] of the string
controlled by [`str].
[:zh_CN] 对于由 [`str] 所控制的字符串的所有元素 [`I]，均有
[`traits::eq(at(xpos+I), str.at(I))]。
[list:end]

[para:returns]
[:en] [`xpos] if the function can determine such a value for [`xpos].
[:zh_CN] 如果该函数可以确定这样的 [`xpos] 值则为 [`xpos]。

[:en] Otherwise, returns [`npos].
[:zh_CN] 否则，返回 [`npos]。

[para:notes]
[:en] Uses [`traits::eq()].
[:zh_CN] 使用 [`traits::eq()]。
[exit:description]

[%@library find[!basic_string]]
[%@library basic_string[!find]]
[codeblock:declaration]
size_type find(const charT* s, size_type pos, size_type n) const;
[codeblock:end]

[enter:description]
[para:returns]
[:en] [`find(basic_string(s,n),pos)].
[:zh_CN] [`find(basic_string(s,n),pos)]。
[exit:description]

[%@library find[!basic_string]]
[%@library basic_string[!find]]
[codeblock:declaration]
size_type find(const charT* s, size_type pos = 0) const;
[codeblock:end]

[enter:description]
[para:requires]
[:en] [`s] points to an array of at least [`traits::length(s) + 1] elements of
[`charT].
[:zh_CN] [`s] 指向 [`charT] 的至少 [`traits::length(s) + 1] 个元素的数组。

[para:returns]
[:en] [`find(basic_string(s), pos)].
[:zh_CN] [`find(basic_string(s), pos)]。
[exit:description]

[%@library basic_string[!find]]
[%@library find[!basic_string]]
[codeblock:declaration]
size_type find(charT c, size_type pos = 0) const;
[codeblock:end]

[enter:description]
[para:returns]
[:en] [`find(basic_string(1,c), pos)].
[:zh_CN] [`find(basic_string(1,c), pos)]。
[exit:description]
