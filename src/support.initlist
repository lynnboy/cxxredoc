[section#support.initlist
    [:en] Initializer lists
    [:zh_CN] 初始化式列表
]

[%[`<initializer_list>][sortas initializer_list]]
[%@library <initializer_list>[sortas initializer_list]]
[para]
[:en]
The header [`<initializer_list>] defines a class template and several support
functions related to list-initialization (see [#dcl.init.list]).
[:zh_CN]
头文件 [`<initializer_list>] 定义了与列表初始化相关的一个类模板和几个支持函数
（参见 [#dcl.init.list]）。

[para:synopsis]
[:en]
Header [`<initializer_list>] synopsis
[:zh_CN]
头文件 [`<initializer_list>] 纲要

[%@library initializer_list]
[%@library begin]
[%@library end]
[codeblock:synopsis]
namespace std {
  template<class E> class initializer_list {
  public:
    typedef E value_type;
    typedef const E& reference;
    typedef const E& const_reference;
    typedef size_t size_type;

    typedef const E* iterator;
    typedef const E* const_iterator;

    constexpr initializer_list() noexcept;

    constexpr size_t size() const noexcept;      // number of elements
    constexpr const E* begin() const noexcept;   // first element
    constexpr const E* end() const noexcept;     // one past the last element
  };

  // [:en] [#support.initlist.range] initializer list range access
  // [|:zh_CN] [#support.initlist.range] 初始化式列表的范围访问
  template<class E> constexpr const E* begin(initializer_list<E> il) noexcept;
  template<class E> constexpr const E* end(initializer_list<E> il) noexcept;
}
[codeblock:end]

[para]
[:en]
An object of type [`initializer_list<E>] provides access to an array of objects
of type [`const E].
[:zh_CN]
类型 [`initializer_list<E>] 的对象提供对类型 [`const E] 对象的一个数组的访问。

[enter:note]
[:en]
A pair of pointers or a pointer plus a length would be obvious representations
for [`initializer_list].
[:zh_CN]
[`initializer_list] 的表示明显可以为一对指针或者一个指针和一个长度。

[:en]
[`initializer_list] is used to implement initializer lists as specified
in [#dcl.init.list].
[:zh_CN]
[`initializer_list] 用于实现 [#dcl.init.list] 中所指定的初始化式列表。

[:en]
Copying an initializer list does not copy the underlying elements.
[:zh_CN]
复制初始化式列表并不会复制其底层各个元素。
[exit:note]

[para]
[:en]
If an explicit specialization or partial specialization of [`initializer_list]
is declared, the program is ill-formed.
[:zh_CN]
如果声明 [`initializer_list] 的显式特化式或者部分特化式，则程序非良构。

[include support.initlist.cons]

[include support.initlist.access]

[include support.initlist.range]
