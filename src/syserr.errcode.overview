[section#syserr.errcode.overview
    [:en] Class [`error_code] overview
]

[para]
[:en]
The class [`error_code] describes an object used to hold error code
values, such as those originating from the operating system or other low-level
application program interfaces.

[enter:note]
[:en]
Class [`error_code] is an adjunct to error reporting by exception.
[exit:note]

[%@library error_code]
[codeblock:synopsis]
namespace std {
  class error_code {
  public:
    // [:en] [#syserr.errcode.constructors] constructors:
    error_code() noexcept;
    error_code(int val, const error_category& cat) noexcept;
    template <class ErrorCodeEnum>
      error_code(ErrorCodeEnum e) noexcept;

    // [:en] [#syserr.errcode.modifiers] modifiers:
    void assign(int val, const error_category& cat) noexcept;
    template <class ErrorCodeEnum>
        error_code& operator=(ErrorCodeEnum e) noexcept;
    void clear() noexcept;

    // [:en] [#syserr.errcode.observers] observers:
    int value() const noexcept;
    const error_category& category() const noexcept;
    error_condition default_error_condition() const noexcept;
    string message() const;
    explicit operator bool() const noexcept;

  private:
    int val_;                   // [=Expos]
    const error_category* cat_; // [=Expos]
  };

  // [:en] [#syserr.errcode.nonmembers] non-member functions:
  error_code make_error_code(errc e) noexcept;
  bool operator<(const error_code& lhs, const error_code& rhs) noexcept;

  template <class charT, class traits>
    basic_ostream<charT,traits>&
      operator<<(basic_ostream<charT,traits>& os, const error_code& ec);
}   // namespace std
[codeblock:end]
