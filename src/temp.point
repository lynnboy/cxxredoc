[section#temp.point
    [:en] Point of instantiation
]

[para]
[:en]
[%instantiation[!point of]]
For a function template specialization, a member function template
specialization, or a specialization for a member function or static data member
of a class template, if the specialization is implicitly instantiated because it
is referenced from within another template specialization and the context from
which it is referenced depends on a template parameter, the point of
instantiation of the specialization is the point of instantiation of the
enclosing specialization.

[:en]
Otherwise, the point of instantiation for such a specialization immediately
follows the namespace scope declaration or definition that refers to the
specialization.

[para]
[:en]
If a function template or member function of a class template is called in a way
which uses the definition of a default argument of that function template or
member function, the point of instantiation of the default argument is the point
of instantiation of the function template or member function specialization.

[para]
[:en]
For an [~exception-specification] of a function template specialization or
specialization of a member function of a class template, if the
[~exception-specification] is implicitly instantiated because it is needed by
another template specialization and the context that requires it depends on a
template parameter, the point of instantiation of the [~exception-specification]
is the point of instantiation of the specialization that requires it.

[:en]
Otherwise, the point of instantiation for such an [~exception-specification]
immediately follows the namespace scope declaration or definition that requires
the [~exception-specification].

[para]
[:en]
For a class template specialization, a class member template specialization, or
a specialization for a class member of a class template, if the specialization
is implicitly instantiated because it is referenced from within another template
specialization, if the context from which the specialization is referenced
depends on a template parameter, and if the specialization is not instantiated
previous to the instantiation of the enclosing template, the point of
instantiation is immediately before the point of instantiation of the enclosing
template.

[:en]
Otherwise, the point of instantiation for such a specialization immediately
precedes the namespace scope declaration or definition that refers to the
specialization.

[para]
[:en]
If a virtual function is implicitly instantiated, its point of instantiation is
immediately following the point of instantiation of its enclosing class template
specialization.

[para]
[:en]
An explicit instantiation definition is an instantiation point for the
specialization or specializations specified by the explicit instantiation.

[para]
[:en]
The instantiation context of an expression that depends on the template
arguments is the set of declarations with external linkage declared prior to the
point of instantiation of the template specialization in the same translation
unit.

[para]
[:en]
A specialization for a function template, a member function template, or of a
member function or static data member of a class template may have multiple
points of instantiations within a translation unit, and in addition to the
points of instantiation described above, for any such specialization that has a
point of instantiation within the translation unit, the end of the translation
unit is also considered a point of instantiation.

[:en]
A specialization for a class template has at most one point of instantiation
within a translation unit.

[:en]
A specialization for any template may have points of instantiation in multiple
translation units.

[:en]
If two different points of instantiation give a template specialization
different meanings according to the one definition rule ([#basic.def.odr]), the
program is ill-formed, no diagnostic required.
