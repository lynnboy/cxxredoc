[section#utility.arg.requirements
    [:en] Template argument requirements
    [:zh_CN] 对模板实参的规定
]

[para]
[:en]
The template definitions in the [=Cpp] standard library refer to various named
requirements whose details are set out in tables
[#equalitycomparable][=-][#destructible].
[:zh_CN]
[=Cpp] 标准程序库中的模板定义式涉及各种命名的规定，它们的细节在表
[#equalitycomparable]—[#destructible] 中列出。

[:en]
In these tables, [`T] is an object or reference type to be supplied by a [=Cpp]
program instantiating a template; [`a], [`b], and [`c] are values of type
(possibly [`const]) [`T]; [`s] and [`t] are modifiable lvalues of type [`T];
[`u] denotes an identifier; [`rv] is an rvalue of type [`T]; and [`v] is an
lvalue of type (possibly [`const]) [`T] or an rvalue of type [`const T].
[:zh_CN]
这些表中，[`T] 是由 [=Cpp] 程序提供以实例化某个模板的对象或引用类型；[`a]、[`b]
和 [`c] 为（可能为 [`const] 的）类型 [`T] 的值；[`s] 和 [`t] 是类型 [`T] 的可
改动左值；[`u] 代表一个标识符；[`rv] 是类型 [`T] 的右值；而 [`v] 是（可能为
[`const] 的）类型 [`T] 的左值，或者类型 [`const T] 的右值。

[para]
[:en]
In general, a default constructor is not required.
[:zh_CN]
一般并不需要默认构造函数。

[:en]
Certain container class member function signatures specify [`T()] as a default
argument.
[:zh_CN]
某些容器类的成员函数签名中将 [`T()] 指定为其默认实参。

[:en]
[`T()] shall be a well-defined expression ([#dcl.init]) if one of those
signatures is called using the default argument ([#dcl.fct.default]).
[:zh_CN]
当对这些签名之一以默认实参进行调用时（[#dcl.fct.default]），[`T()] 应当是良构的
表达式（[#dcl.init]）。

[%[:en] requirements[![`EqualityComparable]]
  [:zh_CN] 规定[![`EqualityComparable]]]
[table:listing@reflable#equalitycomparable
    [:en] [`EquialityComparable] requirements
    [:zh_CN] [`EquialityComparable] 规定
    [columns
        [column@code
            [:en] Expression
            [:zh_CN] 表达式
        ]
        [column
            [:en] Return type
            [:zh_CN] 返回类型
        ]
        [column
            [:en] Requirement
            [:zh_CN] 规定
        ]
    ]
    [border:row@both]
]
[|] a == b
        [|] [:en] convertible to [`bool]
            [:zh_CN] 可以转换为 [`bool]
                [|] [:en] [`==] is an equivalence relation, that is, it has the
                    following properties:
                    [:zh_CN] [`==] 是等价关系，亦即它具有以下性质：
                    [list]
                    [item] [:en] For all [`a], [`a == a].
                        [:zh_CN] 对于所有 [`a]，由 [`a == a]。
                    [item] [:en] If [`a == b], then [`b == a].
                        [:zh_CN] 若 [`a == b]，则 [`b == a]。
                    [item] [:en] If [`a == b] and [`b == c], then [`a == c].
                        [:zh_CN] 若 [`a == b] 且 [`b == c]，则 [`a == c]。
                    [list:end]
[table:end]

[%[:en] requirements[![`LessThanComparable]]
  [:zh_CN] 规定[![`LessThanComparable]]]
[table:listing@reflable#lessthancomparable
    [:en] [`LessThanComparable] requirements
    [:zh_CN] [`LessThanComparable] 规定
    [columns
        [column@code
            [:en] Expression
            [:zh_CN] 表达式
        ]
        [column
            [:en] Return type
            [:zh_CN] 返回类型
        ]
        [column
            [:en] Requirement
            [:zh_CN] 规定
        ]
    ]
    [border:row@both]
]
[|] a < b
        [|] [:en] convertible to [`bool]
            [:zh_CN] 可以转换为 [`bool]
                [|] [:en] [`<] is a strict weak ordering relation
                    ([#alg.sorting])
                    [:zh_CN] [`<] 为严格弱序关系（[#alg.sorting]）。
[table:end]

[% [:en] requirements[![`DefaultConstructible]]
   [:zh_CN] 规定[![`DefaultConstructible]]]
[table:listing@reflable#defaultconstructible
    [:en] [`DefaultConstructible] requirements
    [:zh_CN] [`DefaultConstructible] 规定
    [columns
        [column@code
            [:en] Expression
            [:zh_CN] 表达式
        ]
        [column
            [:en] Post-condition
            [:zh_CN] 后条件
        ]
    ]
    [border:row@none]
]
[|] T t;
        [|] [:en] object [`t] is default-initialized
            [:zh_CN] 对象 [`t] 被默认初始化
[|] T u{};
        [|] [:en] object [`u] is value-initialized or aggregate-initialized
            [:zh_CN] 对象 [`u] 被值初始化或聚合初始化
[|] T() [br] T{}
        [|] [:en] a temporary object of type [`T] is value-initialized
            or aggregate-initialized
            [:zh_CN] 类型 [`T] 的临时对象被值初始化或聚合初始化

[table:end]

[% [:en] requirements[![`MoveConstructible]]
   [:zh_CN] 规定[![`MoveConstructible]]]
[table:listing@reflable#moveconstructible
    [:en] [`MoveConstructible] requirements
    [:zh_CN] [`MoveConstructible] 规定
    [columns
        [column@code
            [:en] Expression
            [:zh_CN] 表达式
        ]
        [column
            [:en] Post-condition
            [:zh_CN] 后条件
        ]
    ]
    [border:row@none]
]
[|] T u = rv;
        [|] [:en] [`u] is equivalent to the value of [`rv] before the
            construction
            [:zh_CN] [`u] 等价于 [`rv] 在构造之前的值
[|] T(rv)
        [|] [:en] [`T(rv)] is equivalent to the value of [`rv] before the
            construction
            [:zh_CN] [`T(rv)] 等价于 [`rv] 在构造之前的值
[|@normal@colspan=2 ]
[:en] [`rv][=']s state is unspecified
[:zh_CN] [`rv] 的状态是未指明的

[enter:note]
[:en] [`rv] must still meet the requirements of the library component that is
using it.
[:zh_CN] [`rv] 必须仍然满足使用它的程序库组件的规定。

[:en] The operations listed in those requirements must work as specified whether
[`rv] has been moved from or not.
[:zh_CN] 那些规定中所列出的操作，无论 [`rv] 是否已被移走，必须按所指定的方式工作
。
[exit:note]
[table:end]

[% [:en] requirements[![`CopyConstructible]]
   [:zh_CN] 规定[![`CopyConstructible]]]
[table:listing@reflable#copyconstructible
    [:en] [`CopyConstructible] requirements (in addition to
        [`MoveConstructible])
    [:zh_CN] [`CopyConstructible] 规定（除 [`MoveConstructible] 之外）
    [columns
        [column@code
            [:en] Expression
            [:zh_CN] 表达式
        ]
        [column
            [:en] Post-condition
            [:zh_CN] 后条件
        ]
    ]
    [border:row@none]
]
[|] T u = v;
        [|] [:en] the value of [`v] is unchanged and is equivalent to [`u]
            [:zh_CN] [`v] 的值未改变且等价于 [`u]
[|] T(v)
        [|] [:en] the value of [`v] is unchanged and is equivalent to [`T(v)]
            [:zh_CN] [`v] 的值未改变且等价于 [`T(v)]
[table:end]

[% [:en] requirements[![`MoveAssignable]]
   [:zh_CN] 规定[![`MoveAssignable]]]
[table:listing@reflable#moveassignable
    [:en] [`MoveAssignable] requirements
    [:zh_CN] [`MoveAssignable] 规定
    [columns
        [column@code
            [:en] Expression
            [:zh_CN] 表达式
        ]
        [column@code
            [:en] Return type
            [:zh_CN] 返回类型
        ]
        [column@code
            [:en] Return value
            [:zh_CN] 返回值
        ]
        [column
            [:en] Post-condition
            [:zh_CN] 后条件
        ]
    ]
    [border:row@none]
]
[|] T = rv  [|] T&  [|] t
        [|] [:en] [`t] is equivalent to the value of [`rv] before the assignment
            [:zh_CN] [`t] 等价于 [`rv] 在复制之前的值
[|@normal@colspan=4 ]
[:en] [`rv][=']s state is unspecified.
[:zh_CN] [`rv] 的状态是未指明的。

[enter:note]
[:en] [`rv] must still meet the requirements of the library component that is
using it.
[:zh_CN] [`rv] 必须仍然满足使用它的程序库组件的规定。

[:en] The operations listed in those requirements must work as specified whether
[`rv] has been moved from or not.
[:zh_CN] 那些规定中所列出的操作，无论 [`rv] 是否已被移走，必须按所指定的方式工作
。
[exit:note]
[table:end]

[% [:en] requirements[![`CopyAssignable]]
   [:zh_CN] 规定[![`CopyAssignable]]]
[table:listing@reflable#copyassignable
    [:en] [`CopyAssignable] requirements (in addition to [`MoveAssignable])
    [:zh_CN] [`CopyAssignable] 规定（处 [`MoveAssignable] 之外）
    [columns
        [column@code
            [:en] Expression
            [:zh_CN] 表达式
        ]
        [column@code
            [:en] Return type
            [:zh_CN] 返回类型
        ]
        [column@code
            [:en] Return value
            [:zh_CN] 返回值
        ]
        [column
            [:en] Post-condition
            [:zh_CN] 后条件
        ]
    ]
    [border:row@none]
]
[|] T = v   [|] T&  [|] t
        [|] [:en] [`t] is equivalent to [`v], the value of [`v] is unchanged
            [:zh_CN] [`t] 等价于 [`v]，[`v] 的值未改变
[table:end]

[%[:en]requirements[![`Destructible]]
  [:zh_CN]规定[![`Destructible]]]
[table:listing@reflable#destructible
    [:en] [`Destructible] requirements
    [:zh_CN] [`Destructible] 规定
    [columns
        [column@code
            [:en] Expression
            [:zh_CN] 表达式
        ]
        [column
            [:en] Post-condition
            [:zh_CN] 后条件
        ]
    ]
    [border:row@none]
]
[|] u.~T()
        [|] [:en] All resources owned by [`u] are reclaimed, no exception is
            propagated.
            [:zh_CN] 回收 [`u] 所拥有的全部资源，不传播异常。
[table:end]
